{"version":3,"sources":["../@siag/ngx-egov-authentication.es5.js"],"names":["EgovUserWidgetDirective","elementRef","this","prototype","ngOnInit","userwidget","EgovUserwidget","nativeElement","config","user","console","log","render","decorators","type","Directive","args","selector","ctorParameters","ElementRef","propDecorators","Input","EGovAuthModule","forRoot","ngModule","Configure","http","undefined","httpLibrary","options","request","method","url","body","data","toPromise","Authentication","configure","GetCurrent","Observable","from","getCurrent","NgModule","imports","CommonModule","declarations","exports","EGovAuthHttp","ErrorInterceptor","res","handleAjaxResponse","status","getResponseHeader","headerName","headers","getResponseBody","json","map","x"],"mappings":"gkBAUA,IAAIA,GAAyC,WAIzC,QAASA,GAAwBC,GAC7BC,KAAKD,WAAaA,EAiBtB,MAZAD,GAAwBG,UAAUC,SAAW,WACzC,GAAqBC,GAAa,GAAIC,GAAAA,eAAeJ,KAAKD,WAAWM,cAAeL,KAAKM,OACrFN,MAAKO,MAELC,QAAQC,IAAI,qCACZN,EAAWO,QAASH,KAAMP,KAAKO,SAG/BC,QAAQC,IAAI,2BACZN,EAAWO,WAGZZ,IAEXA,GAAwBa,aAClBC,KAAMC,EAAAA,UAAWC,OAEPC,SAAU,wBAI1BjB,EAAwBkB,eAAiB,WAAc,QACjDJ,KAAMK,EAAAA,cAEZnB,EAAwBoB,gBACpBZ,SAAaM,KAAMO,EAAAA,QACnBZ,OAAWK,KAAMO,EAAAA,QAMrB,IAAIC,GAAgC,WAChC,QAASA,MAkCT,MA7BAA,GAAeC,QAAU,WACrB,OACIC,SAAUF,IAQlBA,EAAeG,UAAY,SAAUjB,EAAQkB,OACrCC,KAAcnB,EAAOoB,iBAAeD,KAAcD,IAClDlB,EAAOoB,YAAc,SAAUC,GAC3B,MAAOH,GACFI,QAAQD,EAAQE,OAAQF,EAAQG,KAEjCC,KAAMJ,EAAQK,OAEbC,cAGbC,EAAAA,eAAeC,UAAU7B,IAK7Bc,EAAegB,WAAa,WACxB,MAAOC,GAAAA,WAAWC,KAAKJ,EAAAA,eAAeK,eAEnCnB,IAEXA,GAAeT,aACTC,KAAM4B,EAAAA,SAAU1B,OACN2B,SAAUC,EAAAA,cACVC,cAAe7C,GACf8C,SAAU9C,MAO1B,IAAI+C,GAA8B,WAC9B,QAASA,MA0CT,MApCAA,GAAaC,iBAAmB,SAAUC,GACtCb,EAAAA,eAAec,oBACXlB,IAAKiB,EAAIjB,IACTmB,OAAQF,EAAIE,OACZC,kBAAmB,SAAUC,GACzB,MAAOJ,GAAIK,QAAQD,IAEvBE,gBAAiB,WAEb,GAAmB,MAAfN,EAAIE,OACJ,MAAOF,GAAIO,WAU3BT,EAAatB,UAAY,SAAUjB,EAAQkB,OAEnCC,IAAanB,EAAOoB,cACpBpB,EAAOoB,YAAc,SAAUC,GAC3B,MAAOH,GACFI,QAAQD,EAAQG,KACjBD,OAAQF,EAAQE,OAEhBE,KAAMJ,EAAQK,OAEbuB,IAAI,SAAUC,GAAK,MAAOA,GAAEF,SAC5BrB,cAGbb,EAAeG,UAAUjB,IAEtBuC","file":"./dist/ngx-egov-authentication/bundles/ngx-egov-authentication.umd.min.js","sourcesContent":["import { Directive, ElementRef, Input, NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { Authentication } from '@siag/js-egov-authentication';\r\nimport { EgovUserwidget } from '@siag/jsui-egov-authentication';\r\nimport { Observable } from 'rxjs';\r\nimport 'rxjs/add/operator/map';\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\nvar EgovUserWidgetDirective = /** @class */ (function () {\r\n    /**\r\n     * @param {?} elementRef\r\n     */\r\n    function EgovUserWidgetDirective(elementRef) {\r\n        this.elementRef = elementRef;\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    EgovUserWidgetDirective.prototype.ngOnInit = function () {\r\n        var /** @type {?} */ userwidget = new EgovUserwidget(this.elementRef.nativeElement, this.config);\r\n        if (this.user) {\r\n            // if we get the user in, handle it ourself\r\n            console.log('render userwidget with user input');\r\n            userwidget.render({ user: this.user });\r\n        }\r\n        else {\r\n            console.log('render userwidget plain');\r\n            userwidget.render();\r\n        }\r\n    };\r\n    return EgovUserWidgetDirective;\r\n}());\r\nEgovUserWidgetDirective.decorators = [\r\n    { type: Directive, args: [{\r\n                // tslint:disable-next-line:directive-selector\r\n                selector: '[egov-userwidget]'\r\n            },] },\r\n];\r\n/** @nocollapse */\r\nEgovUserWidgetDirective.ctorParameters = function () { return [\r\n    { type: ElementRef, },\r\n]; };\r\nEgovUserWidgetDirective.propDecorators = {\r\n    \"config\": [{ type: Input },],\r\n    \"user\": [{ type: Input },],\r\n};\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\nvar EGovAuthModule = /** @class */ (function () {\r\n    function EGovAuthModule() {\r\n    }\r\n    /**\r\n     * @return {?}\r\n     */\r\n    EGovAuthModule.forRoot = function () {\r\n        return {\r\n            ngModule: EGovAuthModule\r\n        };\r\n    };\r\n    /**\r\n     * @param {?} config\r\n     * @param {?=} http\r\n     * @return {?}\r\n     */\r\n    EGovAuthModule.Configure = function (config, http) {\r\n        if (undefined === config.httpLibrary && undefined !== http) {\r\n            config.httpLibrary = function (options) {\r\n                return http\r\n                    .request(options.method, options.url, {\r\n                    //headers: options.headers,\r\n                    body: options.data\r\n                })\r\n                    .toPromise();\r\n            };\r\n        }\r\n        Authentication.configure(config);\r\n    };\r\n    /**\r\n     * @return {?}\r\n     */\r\n    EGovAuthModule.GetCurrent = function () {\r\n        return Observable.from(Authentication.getCurrent());\r\n    };\r\n    return EGovAuthModule;\r\n}());\r\nEGovAuthModule.decorators = [\r\n    { type: NgModule, args: [{\r\n                imports: [CommonModule],\r\n                declarations: [EgovUserWidgetDirective],\r\n                exports: [EgovUserWidgetDirective]\r\n            },] },\r\n];\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\nvar EGovAuthHttp = /** @class */ (function () {\r\n    function EGovAuthHttp() {\r\n    }\r\n    /**\r\n     * @param {?} res\r\n     * @return {?}\r\n     */\r\n    EGovAuthHttp.ErrorInterceptor = function (res) {\r\n        Authentication.handleAjaxResponse({\r\n            url: res.url,\r\n            status: res.status,\r\n            getResponseHeader: function (headerName) {\r\n                return res.headers[headerName];\r\n            },\r\n            getResponseBody: function () {\r\n                // Example, catch 401 errors\r\n                if (res.status === 403) {\r\n                    return res.json();\r\n                }\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * @param {?} config\r\n     * @param {?} http\r\n     * @return {?}\r\n     */\r\n    EGovAuthHttp.Configure = function (config, http) {\r\n        // default Http for angular 2\r\n        if (undefined == config.httpLibrary) {\r\n            config.httpLibrary = function (options) {\r\n                return http\r\n                    .request(options.url, {\r\n                    method: options.method,\r\n                    //headers: options.headers,\r\n                    body: options.data\r\n                })\r\n                    .map(function (x) { return x.json(); })\r\n                    .toPromise();\r\n            };\r\n        }\r\n        EGovAuthModule.Configure(config);\r\n    };\r\n    return EGovAuthHttp;\r\n}());\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n/**\r\n * @fileoverview added by tsickle\r\n * @suppress {checkTypes} checked by tsc\r\n */\r\n/**\r\n * Generated bundle index. Do not edit.\r\n */\r\nexport { EGovAuthModule, EGovAuthHttp, EgovUserWidgetDirective as Éµa };\r\n//# sourceMappingURL=ngx-egov-authentication.es5.js.map\n"]}